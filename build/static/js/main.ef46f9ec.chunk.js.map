{"version":3,"sources":["components/Burger/BurgerIngredients/BurgerIngredients.module.css","components/UI/Input/Input.module.css","components/Navigation/Sidedrawer/Sidedrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Order/Order.module.css","components/Layout/Layout.module.css","assets/images/burger.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/Sidedrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Overlay/Overlay.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","containers/Auth/Auth.module.css","hoc/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Sidedrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Sidedrawer/Sidedrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredients/BurgerIngredients.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Overlay/Overlay.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary.js","components/UI/Input/Input.js","shared/utility.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","aux","props","children","logo","className","styles","Logo","style","height","src","burgerLogo","alt","navItem","NavigationItem","activeClassName","active","exact","to","link","navItems","NavigationItems","isAuth","drawerToggle","onClick","drawerToggleClicked","DrawerToggle","Toolbar","DesktopOnly","backDrop","show","Backdrop","backdropClicked","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Aux","closed","join","Layout","state","showSideDrawer","SideDrawerClosedHandler","setState","ToggleDrawer","prevState","this","isAuthenticated","Content","Component","connect","auth","token","BurgerIngredients","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Bacon","Salad","Cheese","burger","transformedIngredients","Object","keys","ingredients","map","ingKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","More","added","controls","buildControls","classes","BuildControls","price","toFixed","ctr","ingredientAdded","ingredientRemoved","OrderButton","disabled","purhasable","ordered","Overlay","nextProps","nextState","purchaseCancelled","Modal","transform","opacity","button","Button","clicked","OrderSummary","ingredientsArr","item","textTransform","buyerAction","spinner","Loader","withErrorHandler","WrappedComponent","axios","error","errorConfrimedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","instance","create","baseURL","authSuccess","userId","idToken","logOut","localStorage","removeItem","triggerExpiryTimer","expiryTime","dispatch","setTimeout","setAuthRedirectPath","path","BurgerBuilder","purchasing","purchasingHandler","setReturnPath","history","push","purchaseCancelledHandler","buyerActionHandler","action","onCheckoutInit","onInitIngredients","sum","orderSummary","Spinner","ings","onIngredientAdded","onIngredientRemoved","updatePurchasable","burgerBuilder","totalPrice","purchased","order","purchsed","building","ingName","ingredientName","get","then","data","catch","err","Actions","checkoutSummary","CheckoutSummary","width","margin","CheckoutCancelled","CheckoutContinued","input","inputElement","inputClasses","InputElement","isvalid","shouldvalidate","touched","Invalid","elementtype","elementconfig","value","onChange","changed","options","option","displayValue","Input","checkValidity","rules","isValid","required","trim","minLength","maxLength","isEmail","test","isNumeric","ContactData","orderForm","name","placeholder","validation","valid","street","zipcode","country","email","deliverymethod","formIsValid","orderSubmitHandler","event","preventDefault","onLoading","formData","formElementIdentifier","ingredientes","orderData","onOrderBurger","onInputChangedHandler","inputId","updatedOrderForm","updatedFormElement","target","checks","formValid","eachkey","formArrayElements","id","config","theform","onSubmit","formElement","loading","post","orderId","purchaseBurgerSuccess","orderActions","Checkout","CheckoutCancelledHandler","goBack","CheckoutContinuedHander","replace","summary","finishedPurchase","match","component","amount","ingredMap","ing","Ingreds","Order","Orders","onFetchOrders","orders","fetchedOrders","Auth","authForm","password","isSignUp","controlName","updatedForm","onsubmitHandler","onAuth","switchMode","authRedirectPath","setReturnRoute","form","errorMessage","routeAway","url","loginData","returnSecureToken","resData","expiryDate","Date","getTime","expiresIn","setItem","localId","authFail","Logout","onLogOut","App","onTryAutoLogin","routes","withRouter","getItem","Boolean","window","location","hostname","initialState","INGREDIENT_PRICES","salad","bacon","cheese","meat","reducer","newOrder","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.ef46f9ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients_BreadBottom__wtQXh\",\"BreadTop\":\"BurgerIngredients_BreadTop__3M2jF\",\"Seeds1\":\"BurgerIngredients_Seeds1__p7_n-\",\"Seeds2\":\"BurgerIngredients_Seeds2__1nv0c\",\"Meat\":\"BurgerIngredients_Meat__1ylfY\",\"Cheese\":\"BurgerIngredients_Cheese__3qWpp\",\"Salad\":\"BurgerIngredients_Salad__nySHS\",\"Bacon\":\"BurgerIngredients_Bacon__3HC-C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"Sidedrawer_SideDrawer__2XUSO\",\"Open\":\"Sidedrawer_Open__1XS7f\",\"Close\":\"Sidedrawer_Close__3bqV-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2bfj1\",\"DesktopOnly\":\"Toolbar_DesktopOnly__3ulkV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\",\"Ingreds\":\"Order_Ingreds__1zLaK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2WLOk\"};","module.exports = __webpack_public_path__ + \"static/media/burger.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__15odU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Overlay_Modal__2O0A4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load6\":\"Spinner_load6__1_74m\",\"round\":\"Spinner_round__3G_CY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__36R7w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Zul_\"};","const aux = props => props.children;\nexport default aux;\n","import React from \"react\";\n// inform webpack where the image is stored\nimport burgerLogo from \"../../assets/images/burger.png\";\n\nimport styles from \"./Logo.module.css\";\n\nconst logo = props => (\n  <div className={styles.Logo} style={{ height: props.height }}>\n    <img src={burgerLogo} alt=\"BurgerLogo\" />\n  </div>\n);\nexport default logo;\n","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport styles from \"./NavigationItem.module.css\";\n\nconst navItem = props => (\n  <li className={styles.NavigationItem}>\n    <NavLink activeClassName={styles.active} exact={props.exact} to={props.link}>{props.children}</NavLink>\n  </li>\n);\n\nexport default navItem;\n","import React from \"react\";\nimport styles from \"./NavigationItems.module.css\";\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\n\nconst navItems = props => (\n  <ul className={styles.NavigationItems}>\n    <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\n    {props.isAuth ? <NavigationItem link=\"/orders\">Orders</NavigationItem> : null}\n    {!props.isAuth ? <NavigationItem link=\"/auth\">Login</NavigationItem> : <NavigationItem link=\"/logout\">Logout</NavigationItem>}\n\n  </ul>\n);\nexport default navItems;\n","import React from \"react\";\nimport styles from \"./DrawerToggle.module.css\";\n\nconst drawerToggle = props => (\n  <div onClick={props.drawerToggleClicked} className={styles.DrawerToggle}></div>\n);\nexport default drawerToggle;\n","import React from \"react\";\nimport styles from \"./Toolbar.module.css\";\nimport Logo from \"../Logo/Logo\";\nimport NavigationItems from \"./NavigationItems/NavigationItems\";\nimport DrawerToggle from \"../Navigation/Sidedrawer/DrawerToggle/DrawerToggle\";\n\nconst Toolbar = (props) => (\n  <header className={styles.Toolbar}>\n    <DrawerToggle drawerToggleClicked={props.drawerToggleClicked}/>\n    <Logo height=\"80%\" />\n\n    <nav className={styles.DesktopOnly}>\n      <NavigationItems isAuth={props.isAuth}/>\n    </nav>\n  </header>\n);\nexport default Toolbar;\n","import React from \"react\";\nimport styles from \"./Backdrop.module.css\";\n\nconst backDrop = props => (\n    props.show ? <div className={styles.Backdrop} onClick={props.backdropClicked}></div> : null\n  );\n;\nexport default backDrop;\n","import React from \"react\";\nimport Logo from \"../../Logo/Logo\";\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\nimport styles from \"./Sidedrawer.module.css\";\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\nimport Aux from \"../../../hoc/Aux\";\n\nconst sideDrawer = props => {\n  let attachedClasses = [styles.SideDrawer, styles.Close];\n  if (props.open) {\n    attachedClasses = [styles.SideDrawer, styles.Open];\n  }\n  return (\n    <Aux>\n      <Backdrop show={props.open} backdropClicked={props.closed} />\n      <div className={attachedClasses.join(\" \")} onClick={props.closed}>\n        <Logo height=\"11%\" />\n        <nav>\n          <NavigationItems isAuth={props.isAuth}/>\n        </nav>\n      </div>\n    </Aux>\n  );\n};\nexport default sideDrawer;\n","import React, { Component } from \"react\";\nimport Aux from \"../../hoc/Aux\";\nimport styles from \"./Layout.module.css\";\nimport Toolbar from \"../Navigation/Toolbar\";\nimport {connect} from \"react-redux\";\nimport SideDrawer from \"../Navigation/Sidedrawer/Sidedrawer\";\n\nclass Layout extends Component {\n  state = {\n    showSideDrawer: false\n  };\n  SideDrawerClosedHandler = () => {\n    this.setState({ showSideDrawer: false });\n  };\n  ToggleDrawer = () => {\n    this.setState(prevState => {\n      return { showSideDrawer: !prevState.showSideDrawer };\n    });\n  };\n\n  render() {\n    return (\n      <Aux>\n        <Toolbar isAuth = {this.props.isAuthenticated} drawerToggleClicked={this.ToggleDrawer} />\n        <SideDrawer\n          open={this.state.showSideDrawer}\n          closed={this.SideDrawerClosedHandler}\n          isAuth = {this.props.isAuthenticated}\n        />\n        <main className={styles.Content}>{this.props.children}</main>\n      </Aux>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.token\n  }\n\n}\nexport default connect(mapStateToProps)(Layout);\n","import React, { Component } from \"react\";\nimport styles from \"./BurgerIngredients.module.css\";\nimport PropTypes from \"prop-types\";\n\nclass BurgerIngredients extends Component {\n  render() {\n    let ingredient = null;\n    switch (this.props.type) {\n      case \"bread-bottom\":\n        ingredient = <div className={styles.BreadBottom}></div>;\n        break;\n\n      case \"bread-top\":\n        ingredient = (\n          <div className={styles.BreadTop}>\n            <div className={styles.Seeds1}></div>\n            <div className={styles.Seeds2}></div>\n          </div>\n        );\n        break;\n      case \"meat\":\n        ingredient = <div className={styles.Meat}></div>;\n        break;\n      case \"bacon\":\n        ingredient = <div className={styles.Bacon}></div>;\n        break;\n      case \"salad\":\n        ingredient = <div className={styles.Salad}></div>;\n        break;\n\n      case \"cheese\":\n        ingredient = <div className={styles.Cheese}></div>;\n        break;\n      default:\n        ingredient = null;\n    }\n    return ingredient;\n  }\n}\n// implement propType validation schema\nBurgerIngredients.propTypes = {\n  type: PropTypes.string.isRequired\n};\nexport default BurgerIngredients;\n","import React from \"react\";\nimport styles from \"./Burger.module.css\";\nimport BurgerIngredient from \"./BurgerIngredients/BurgerIngredients\";\n\nconst burger = props => {\n  let transformedIngredients = Object.keys(props.ingredients)\n    .map(ingKey => {\n      return [...Array(props.ingredients[ingKey])].map((_, i) => {\n        return <BurgerIngredient key={ingKey + i} type={ingKey} />;\n      });\n    })\n    .reduce((arr, el) => {\n      return arr.concat(el);\n    }, []);\n  if (transformedIngredients.length === 0) {\n    transformedIngredients = <p>Please add some ingredients</p>;\n  }\n  return (\n    <div className={styles.Burger}>\n      <BurgerIngredient type=\"bread-top\" />\n\n      {transformedIngredients}\n\n      <BurgerIngredient type=\"bread-bottom\" />\n    </div>\n  );\n};\nexport default burger;\n","import React from \"react\";\nimport styles from \"./BuildControl.module.css\";\nconst buildControl = props => (\n  <div className={styles.BuildControl}>\n    <div className={styles.Label}>{props.label}</div>\n    <button className={styles.Less} onClick={props.removed}>Less</button>\n    <button className={styles.More} onClick={props.added}>More</button>\n  </div>\n);\n\nexport default buildControl;\n","import React from \"react\";\nimport classes from \"./BuildControls.module.css\";\nimport BuildControl from \"./BuildControl/BuildControl\";\n\nconst controls = [\n  { label: \"Salad\", type: \"salad\" },\n  { label: \"Bacon\", type: \"bacon\" },\n  { label: \"Cheese\", type: \"cheese\" },\n  { label: \"Meat\", type: \"meat\" }\n];\n\nconst buildControls = props => (\n  <div className={classes.BuildControls}>\n      <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n    {controls.map(ctr => (\n      <BuildControl\n        key={ctr.label}\n        label={ctr.label}\n        added={() => props.ingredientAdded(ctr.type)}\n        removed = {() => props.ingredientRemoved(ctr.type)}\n      />\n    ))}\n    <button className={classes.OrderButton} disabled={!props.purhasable} onClick={props.ordered}>{props.isAuth? 'ORDER NOW' : 'SIGN UP TO ORDER'}</button>\n  </div>\n);\n\nexport default buildControls;\n","import React, { Component } from \"react\";\nimport styles from \"./Overlay.module.css\";\nimport BackDrop from \"../Backdrop/Backdrop\";\nimport Aux from \"../../../hoc/Aux\";\n\nclass Overlay extends Component {\n  // only reload this component if show changes\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.show !== this.props.show || nextProps.children !== this.props.children; // .show is responsible for toggling the overlay but for spinner is toggled by some other property so we also check on whether there is an update on the overlay's children or else the spinner will fail to showup\n  }\n  render() {\n    return (\n      <Aux>\n        <BackDrop\n          show={this.props.show}\n          backdropClicked={this.props.purchaseCancelled}\n        />\n        <div\n          className={styles.Modal}\n          style={{\n            transform: this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\n            opacity: this.props.show ? \"1\" : \"0\"\n          }}\n        >\n          {this.props.children}\n        </div>\n      </Aux>\n    );\n  }\n}\nexport default Overlay;\n","import React from \"react\";\nimport styles from \"./Button.module.css\";\n\nconst button = props => (\n  <button disabled={props.disabled} className={[styles.Button, styles[props.type]].join(\" \")} onClick={props.clicked}>\n    {props.children}\n  </button>\n);\nexport default button;\n","import React, { Component } from \"react\";\nimport Button from \"../../UI/Button/Button\";\n\nclass OrderSummary extends Component {\n  // could be a functional component\n  render() {\n    const ingredientsArr = Object.keys(this.props.ingredients).map(item => {\n      return (\n        <li key={item}>\n          <span style={{ textTransform: \"capitalize\" }}>{item}</span>:{\" \"}\n          {this.props.ingredients[item]}\n        </li>\n      );\n    });\n\n    return (\n      <div>\n        <h2>Your Order</h2>\n        <p>A delicious burger with the following ingredients</p>\n        <ul>{ingredientsArr}</ul>\n        <p>\n          <strong>Total Price: {this.props.price.toFixed(2)}</strong>\n        </p>\n        <p>Continue to Checkout?</p>\n        <Button type=\"Danger\" clicked={() => this.props.buyerAction(\"cancel\")}>\n          Cancel\n        </Button>\n        <Button type=\"Success\" clicked={() => this.props.buyerAction(\"checkout\")}>\n          Buy Now\n        </Button>\n      </div>\n    );\n  }\n}\nexport default OrderSummary;\n","import React from \"react\";\nimport styles from \"./Spinner.module.css\";\n\nconst spinner = () => (\n<div className={styles.Loader}>Loading...</div>\n);\nexport default spinner;","import React, { Component } from \"react\";\nimport Overlay from \"../../components/UI/Overlay/Overlay\";\nimport Aux from \"../Aux\";\n\n// remember everything is react should be treated like a function so this function should show the component that triggered the error and show the error its self\nconst withErrorHandler = (WrappedComponent, axios) => {\n  // the class is anonymous becasue i dont use it i just return it, its a class factory essentially\n  return class extends Component {\n    state = {\n      error: null\n    };\n    // use componentWillMount because it triggers before the componentDidMount() for the child components is triggered or else the interceptors wont be available\n    componentWillMount() {\n      // clear errors on every new request\n      this.reqInterceptor = axios.interceptors.request.use(req => {\n        this.setState({ error: null });\n        return req;\n      });\n      this.resInterceptor = axios.interceptors.response.use(\n        res => res,\n        error => {\n          this.setState({ error: error });\n        }\n      );\n    }\n    componentWillUnmount() {\n      // prevent memory leak\n      axios.interceptors.request.eject(this.reqInterceptor);\n      axios.interceptors.response.eject(this.resInterceptor);\n    }\n    errorConfrimedHandler = () => {\n      this.setState({ error: null });\n    };\n    render() {\n      return (\n        <Aux>\n          <Overlay\n            show={this.state.error}\n            purchaseCancelled={this.errorConfrimedHandler}\n          >\n            {this.state.error ? this.state.error.message : null}\n          </Overlay>\n          <WrappedComponent {...this.props} />\n        </Aux>\n      );\n    }\n  };\n};\nexport default withErrorHandler;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"https://react-burger-35338.firebaseio.com/\"\n});\nexport default instance;","import * as ActionTypes from \"./actionTypes\";\nimport axios from \"axios\";\n\nexport const authStart = () => {\n  return {\n    type: ActionTypes.AUTH_START,\n  };\n};\n\nexport const authSuccess = (token, userId) => {\n  return {\n    type: ActionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId,\n  };\n};\n\nexport const authFail = (error) => {\n  return {\n    type: ActionTypes.AUTH_FAIL,\n    error: error,\n  };\n};\nexport const logOut = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expiryDate\");\n  localStorage.removeItem(\"userId\");\n  return {\n    type: ActionTypes.AUTH_LOGOUT,\n  };\n};\n\nexport const triggerExpiryTimer = (expiryTime) => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logOut());\n    }, expiryTime * 1000);\n  };\n};\nexport const setAuthRedirectPath = (path) => {\n  return {\n    type: ActionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path,\n  };\n};\n// Auto Login\nexport const checkAuthState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      dispatch(logOut());\n    } else {\n      const expiryDate = new Date(localStorage.getItem(\"expiryDate\"));\n      const userId = localStorage.getItem(\"userId\");\n      if (expiryDate <= new Date()) {\n        dispatch(logOut());\n      } else {\n        // user is logged in, dispatch auth success\n        dispatch(authSuccess(token, userId));\n        // now that we've triggered a new login, we have to re-trigger a new timer\n        dispatch(triggerExpiryTimer( (expiryDate.getTime() - new Date().getTime()) / 1000  ));\n      }\n    }\n  };\n};\n\n// Trigger Async\nexport const auth = (email, password, isSignUp) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    let url =\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyByq5J5WoJqX6SnjN67dCHrQaLTJFHxHkE\";\n    if (!isSignUp) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyByq5J5WoJqX6SnjN67dCHrQaLTJFHxHkE\";\n    }\n    const loginData = {\n      email,\n      password,\n      returnSecureToken: true,\n    };\n    axios\n      .post(url, loginData)\n      .then((resData) => {\n        const expiryDate = new Date(\n          new Date().getTime() + resData.data.expiresIn * 1000\n        ); // convert expiration time into date\n\n        // persist user data to LS\n        localStorage.setItem(\"token\", resData.data.idToken);\n        localStorage.setItem(\"expiryDate\", expiryDate);\n        localStorage.setItem(\"userId\", resData.data.localId);\n        dispatch(authSuccess(resData.data.idToken, resData.data.localId));\n        dispatch(triggerExpiryTimer(resData.data.expiresIn));\n      })\n      .catch((error) => {\n        dispatch(authFail(error.response.data.error));\n      });\n  };\n};\n","export const ADD_INGREDIENT = \"ADD_INGREDIENT\";\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\";\nexport const FETCH_INGREDIENTS_FAILED = \"FETCH_INGREDIENTS_FAILED\";\n\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\";\nexport const PURCHASE_BURGER_FAIL = \"PURCHASE_BURGER_FAIL\";\nexport const PURCHASE_BURGER_INIT = \"PURCHASE_BURGER_INIT\";\nexport const CHECKOUT_INIT = \"CHECKOUT_INIT\";\n\nexport const FETCH_ORDERS_START = \"FETCH_ORDERS_START\";\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\";\nexport const FETCH_ORDERS_FAIL = \"FETCH_ORDERS_FAIL\";\n\nexport const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\nexport const SET_AUTH_REDIRECT_PATH = \"SET_AUTH_REDIRECT_PATH\";","import React, { Component } from \"react\";\nimport {connect} from 'react-redux';\n\nimport Aux from \"../../hoc/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Overlay from \"../../components/UI/Overlay/Overlay\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport axios from \"../../axios-orders\";\nimport * as Actions from \"../../store/actions/index\";\n\n\nexport class BurgerBuilder extends Component {\n  state = {\n    purchasing: false\n  };\n  componentDidMount() {\n    this.props.onInitIngredients();\n   \n  }\n  updatePurchasable(ingredients) {\n    const totalIngredientPrice = Object.keys(ingredients)\n      .map(key => {\n        return ingredients[key];\n      })\n      .reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n    return totalIngredientPrice > 0 ;\n  }\n  purchasingHandler = () => {\n    if(this.props.isAuthenticated) {\n    this.setState({ purchasing: true });\n  }else {\n    this.props.setReturnPath('/checkout');\n    this.props.history.push(\"/auth\");\n  }\n  };\n  purchaseCancelledHandler = () => {\n    this.setState({ purchasing: false });\n  };\n  buyerActionHandler = action => {\n    switch (action) {\n      case \"cancel\":\n        this.purchaseCancelledHandler();\n        break;\n      case \"checkout\":\n        this.props.onCheckoutInit();\n        this.props.history.push(\"/checkout\");\n        break;\n\n      default:\n        return null;\n    }\n  };\n\n  render() {\n    let orderSummary = null;\n\n    let burger = this.props.error ?<p>Ingredients cannot be fetched</p>: <Spinner />\n \n    if (this.props.ings) {\n      burger = (\n        <Aux>\n          <Burger ingredients={this.props.ings} />\n          <BuildControls\n            ingredientAdded={this.props.onIngredientAdded}\n            ingredientRemoved={this.props.onIngredientRemoved}\n            price={this.props.price}\n            purhasable={this.updatePurchasable(this.props.ings)}\n            ordered={this.purchasingHandler}\n            isAuth = {this.props.isAuthenticated}\n          />\n        </Aux>\n      );\n      orderSummary = (\n        <OrderSummary\n          buyerAction={this.buyerActionHandler}\n          ingredients={this.props.ings}\n          price={this.props.price}\n        />\n      );\n     \n    }\n    return (\n      <Aux>\n        <Overlay\n          show={this.state.purchasing}\n          purchaseCancelled={this.purchaseCancelledHandler}\n        >\n          {orderSummary}\n        </Overlay>\n        {burger}\n      </Aux>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.totalPrice,\n    error: state.burgerBuilder.error,\n    purchased: state.order.purchsed,\n    isAuthenticated: state.auth.token,\n    building: state.burgerBuilder.building\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: (ingName) => dispatch(Actions.addIngredient(ingName)),\n    onIngredientRemoved: (ingName) => dispatch(Actions.removeIngredient(ingName)),\n    onInitIngredients: () => dispatch(Actions.initIngredients()),\n    onCheckoutInit: () => dispatch(Actions.checkoutInit()),\n    setReturnPath: (path) => dispatch(Actions.setAuthRedirectPath(path))\n  }\n\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));\n","// burger builder action creators\nimport * as actionTypes from \"./actionTypes\";\nimport axios from \"../../axios-orders\";\n\nexport const addIngredient = (name) => {\n  return {\n    type: actionTypes.ADD_INGREDIENT,\n    ingredientName: name,\n  };\n};\n\nexport const removeIngredient = (name) => {\n  return {\n    type: actionTypes.REMOVE_INGREDIENT,\n    ingredientName: name,\n  };\n};\n\nexport const setIngredients = (ingredients) => {\n    return {\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: ingredients\n    }\n}\n\nexport const fetchIngredientsFailed = () => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\n    }\n}\n\nexport const initIngredients = () => {\n  // now that we have thunk, it gives us access to the dispatch function so we can use it in our action creators\n  return (dispatch) => {\n    // execute async code and dispatch a new action whenever you are done\n     \n    axios\n      .get(\"https://react-burger-35338.firebaseio.com/ingredients.json\")\n      .then(response => {\n        dispatch(setIngredients(response.data));\n      })\n      .catch(err => {\n        dispatch(fetchIngredientsFailed());\n      });\n      \n  };\n};\n","// Creat order action creators\nimport * as actionTypes from \"./actionTypes\";\nimport axios from \"../../axios-orders\";\n\n// export action creators\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n  // pass the id got from the backend to the reducer so that we can add it in the orders array\n  return {\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\n    orderId: id,\n    orderData: orderData,\n  };\n};\n\nexport const purchaseBurgerFail = (error) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_FAIL,\n    error: error,\n  };\n};\n\nexport const purchaseBurgerInit = () => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_INIT,\n  };\n};\n\nexport const checkoutInit = () => {\n  return {\n    type: actionTypes.CHECKOUT_INIT\n  };\n}\n// dealing with Async actions\nexport const purchaseBurgerStart = (orderData, token) => {\n  return (dispatch) => {\n    // trigger spinner\n    dispatch(purchaseBurgerInit());\n    axios\n      .post(\"/orders.json?auth=\"+token, orderData)\n      .then((res) => {\n        // dispatch actions\n        dispatch(purchaseBurgerSuccess(res.data.name, orderData));\n      })\n      .catch((err) => {\n        dispatch(purchaseBurgerFail(err));\n      });\n  };\n};\n\n\nexport const fetchOrdersSuccess = (orders) => {\n  return {\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\n    orders: orders\n  }\n\n}\nexport const fetchOrdersFail = (error) => {\n  return {\n    type: actionTypes.FETCH_ORDERS_FAIL,\n    error: error\n  }\n\n}\nexport const fetchOrderStart = () => {\n  return {\n    type: actionTypes.FETCH_ORDERS_START,\n\n  }\n}\n\nexport const fetchOrders = (token) => {\n  return dispatch => {\n    // dispatch spinner action\n    dispatch(fetchOrderStart());\n  const fetchedOrders = [];\n  axios\n    .get(\"/orders.json?auth=\"+token)\n    .then(res => {\n      for (let key in res.data) {\n        fetchedOrders.push({ ...res.data[key], id: key });\n      }\n      dispatch(fetchOrdersSuccess(fetchedOrders));\n    })\n    .catch(err => {\n      dispatch(fetchOrdersFail());\n    });\n\n  }\n}\n","import React from \"react\";\nimport Burger from \"../Burger/Burger\";\nimport Button from \"../UI/Button/Button\";\nimport styles from \"./CheckoutSummary.module.css\";\n\nconst checkoutSummary = props => {\n  return (\n    <div className={styles.CheckoutSummary}>\n      <h1>We hope it tastes well</h1>\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\n          \n        <Burger ingredients={props.ingredients} />\n      </div>\n      <Button type=\"Danger\" clicked={props.CheckoutCancelled}>\n        Cancel\n      </Button>\n      <Button type=\"Success\" clicked={props.CheckoutContinued}>\n        Buy Now\n      </Button>\n    </div>\n  );\n};\nexport default checkoutSummary;\n","import React from \"react\";\nimport styles from \"./Input.module.css\";\n\nconst input = props => {\n  let inputElement = null;\n  const inputClasses = [styles.InputElement];\n  if(!props.isvalid && props.shouldvalidate && props.touched) {\n    inputClasses.push(styles.Invalid);\n\n  }\n  switch (props.elementtype) {\n    case (\"input\"):\n      inputElement = (\n        <input\n          className={inputClasses.join(' ')}\n          {...props.elementconfig}\n          value={props.value} onChange={props.changed}\n        />\n      );\n      break;\n    case (\"textarea\"):\n      inputElement = (\n        <textarea\n          className={inputClasses.join(' ')}\n          {...props.elementconfig}\n          value={props.value} onChange={props.changed}\n        />\n      );\n      break;\n    case (\"select\"):\n      inputElement = (\n        <select className={inputClasses.join(' ')} value={props.value} onChange={props.changed}>\n          {props.elementconfig.options.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.displayValue}\n            </option>\n          ))}\n        </select>\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          className={styles.InputElement}\n          {...props.elementconfig}\n          value={props.value}\n        />\n      );\n  }\n  return (\n    <div className={styles.Input}>\n      <label className={styles.Label}>{props.label}</label>\n      {inputElement}\n    </div>\n  );\n};\nexport default input;\n","export const checkValidity = (value, rules) =>  {\n    let isValid = true;\n    if (!rules) {\n        return true;\n    }\n    \n    if (rules.required) {\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid\n    }\n\n    if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid\n    }\n\n    if (rules.isEmail) {\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    if (rules.isNumeric) {\n        const pattern = /^\\d+$/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    return isValid;\n}","import React, { Component } from \"react\";\nimport Button from \"../../../components/UI/Button/Button\";\nimport styles from \"./ContactData.module.css\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport Input from \"../../../components/UI/Input/Input\";\nimport {connect} from \"react-redux\";\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\nimport axios from \"../../../axios-orders\";\nimport * as orderActions from \"../../../store/actions/order\";\nimport * as checks from \"../../../shared/utility\";\n\nclass ContactData extends Component {\n  state = {\n    orderForm: {\n      name: {\n        elementtype: \"input\",\n        elementconfig: {\n          type: \"text\",\n          placeholder: \"Your Name\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      street: {\n        elementtype: \"input\",\n        elementconfig: {\n          type: \"text\",\n          placeholder: \"Street\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      zipcode: {\n        elementtype: \"input\",\n        elementconfig: {\n          type: \"text\",\n          placeholder: \"zip code\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          minLength: 5,\n          maxLength: 5\n        },\n        valid: false,\n        touched: false\n      },\n      country: {\n        elementtype: \"input\",\n        elementconfig: {\n          type: \"text\",\n          placeholder: \"Country\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      email: {\n        elementtype: \"input\",\n        elementconfig: {\n          type: \"email\",\n          placeholder: \"Email\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      deliverymethod: {\n        elementtype: \"select\",\n        elementconfig: {\n          options: [\n            { value: \"fastest\", displayValue: \"Fastest\" },\n            { value: \"cheapest\", displayValue: \"Cheapest\" }\n          ]\n        },\n        validation:{\n          required: false\n        },\n        valid: true,\n        value: \"cheapest\",\n\n      }\n    },\n    formIsValid: false\n  };\n  orderSubmitHandler = event => {\n    event.preventDefault();\n\n    this.props.onLoading();\n    // transformd data and create something like {name: deno, country: uganda}\n    const formData = {};\n    for(let formElementIdentifier in this.state.orderForm){\n      formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n    }\n    const order = {\n      ingredientes: this.props.ings,\n      price: this.props.price.toFixed(2),\n      orderData: formData\n    };\n    this.props.onOrderBurger(order, this.props.token);\n  };\n \n  onInputChangedHandler = (event, inputId) => {\n    // let's try to get access to the input value and change it\n    const updatedOrderForm = { ...this.state.orderForm }; // but remember this doenst do a deep clone\n    // now that we got access to the top tier objects we need to clone again\n    const updatedFormElement = { ...updatedOrderForm[inputId] };\n    updatedFormElement.value = event.target.value;\n    updatedFormElement.valid = checks.checkValidity(updatedFormElement.value, updatedFormElement.validation);\n    updatedFormElement.touched = true;\n    let formValid = true;\n    for(let eachkey in updatedOrderForm){\n      formValid = updatedOrderForm[eachkey].valid && formValid;\n    }\n    updatedOrderForm[inputId] = updatedFormElement;\n    this.setState({ orderForm: updatedOrderForm, formValid: formValid});\n  };\n\n  render() {\n    let formArrayElements = [];\n    for (let key in this.state.orderForm) {\n      formArrayElements.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n    let theform = (\n      <form onSubmit={this.orderSubmitHandler}>\n        {formArrayElements.map(formElement => (\n          <Input\n            key={formElement.id}\n            elementtype={formElement.config.elementtype}\n            elementconfig={formElement.config.elementconfig}\n            value={formElement.config.value}\n            isvalid={formElement.config.valid} \n            shouldvalidate={formElement.config.validation}\n            touched = {formElement.config.touched}\n            changed={event => this.onInputChangedHandler(event, formElement.id)}\n          />\n        ))}\n\n        <Button type=\"Success\" disabled={!this.state.formValid}>\n          ORDER NOW\n        </Button>\n      </form>\n    );\n    if (this.props.loading) {\n      theform = <Spinner />;\n    }\n    return (\n      <div className={styles.ContactData}>\n        <h1>Enter Contact Details</h1>\n        {theform}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.totalPrice,\n    loading: state.order.loading,\n    token: state.auth.token\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n  onOrderBurger: (orderData, token) => dispatch(orderActions.purchaseBurgerStart(orderData, token)),\n  onLoading: () => dispatch(orderActions.purchaseBurgerInit())\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));\n","import React, { Component } from \"react\";\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport ContactData from \"./ContactData/ContactData\";\nimport { connect } from \"react-redux\";\nclass Checkout extends Component {\n\n\n  CheckoutCancelledHandler = () => {\n    // since this component was loaded by router, we have access to props.history\n    this.props.history.goBack();\n  };\n  CheckoutContinuedHander = () => {\n    this.props.history.replace(\"/checkout/contact-data\");\n  };\n\n  render() {\n    let summary = <Redirect to=\"/\" />;\n    if (this.props.ings) {\n      const finishedPurchase = this.props.purchased ? <Redirect to=\"/\"/> : null\n      summary = (\n       \n        <div>\n           {finishedPurchase}\n          <CheckoutSummary\n            ingredients={this.props.ings}\n            CheckoutCancelled={this.CheckoutCancelledHandler}\n            CheckoutContinued={this.CheckoutContinuedHander}\n          />\n          <Route\n            path={this.props.match.path + \"/contact-data\"}\n            component={ContactData}\n          />\n        </div>\n      );\n    }\n    return summary;\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    purchased: state.order.purchased\n  };\n};\n\n\nexport default connect(mapStateToProps)(Checkout);\n","import React from \"react\";\nimport styles from \"./Order.module.css\";\n\nconst order = props => {\n    const ingredients = [];\n    for(let ingName in props.ingredients) {\n        ingredients.push({name: ingName, amount: props.ingredients[ingName]});\n    }\n    const ingredMap = ingredients.map(ing => {\n        return (<span className={styles.Ingreds}> {ing.name} ({ing.amount})</span>);\n    });\n  return (\n    <div className={styles.Order}>\n<p>Ingredients: {ingredMap}</p>\n      <p>\n        Price: <strong>{props.price}</strong>\n      </p>\n    </div>\n  );\n};\nexport default order;\n","import React, { Component } from \"react\";\nimport Order from \"../../components/Order/Order\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport { connect } from \"react-redux\";\nimport axios from \"../../axios-orders\";\nimport * as Actions from \"../../store/actions/index\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\n\nclass Orders extends Component {\n  componentDidMount() {\n    this.props.onFetchOrders(this.props.token);\n  }\n  render() {\n    let orders = <Spinner />;\n    if(!this.props.loading) {\n      orders = (\n        \n        this.props.orders.map((order) => (\n          <Order\n            ingredients={order.ingredientes}\n            price={order.price}\n            key={order.id}\n          />\n        ))\n      );\n\n    }\n    return (\n      <div>\n        {orders}\n        \n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: (token) => dispatch(Actions.fetchOrders(token))\n  };\n};\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Orders, axios));\n","import React, { Component } from \"react\";\nimport Input from \"../../components/UI/Input/Input\";\nimport Button from \"../../components/UI/Button/Button\";\nimport styles from \"./Auth.module.css\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport * as Actions from \"../../store/actions/index\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as checks from \"../../shared/utility\";\n \n\nclass Auth extends Component {\n  state = {\n    authForm: {\n      email: {\n        elementtype: \"input\",\n        elementconfig: {\n          type: \"text\",\n          placeholder: \"Your Email\",\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          isEmail: true,\n        },\n        valid: false,\n        touched: false,\n      },\n      password: {\n        elementtype: \"input\",\n        elementconfig: {\n          type: \"password\",\n          placeholder: \"Your Password\",\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          minLength: 7,\n        },\n        valid: false,\n        touched: false,\n      },\n    },\n    isSignUp: true\n  };\n  componentDidMount() {\n    if(!this.props.building && this.props.authRedirectPath !== '/') {\n      // user was not builidng, set route back to home page\n      this.props.setReturnRoute('/');\n\n    }\n\n  }\nonInputChangedHandler=(event, controlName) => {\n    const updatedForm = {\n        ...this.state.authForm,\n        [controlName]: {\n            ...this.state.authForm[controlName],\n            value: event.target.value,\n            touched: true,\n            valid: checks.checkValidity(event.target.value, this.state.authForm[controlName].validation)\n        }\n    }\n    this.setState({authForm: updatedForm});\n\n}\nonsubmitHandler = (event) => {\n    // prevent page reload\n    event.preventDefault();\n    this.props.onAuth(this.state.authForm.email.value, this.state.authForm.password.value, this.state.isSignUp);\n\n}\nswitchMode = () => {\n    this.setState(prevState =>  { \n        return {isSignUp: !prevState.isSignUp} \n    });\n}\n\n  render() {\n    let formArrayElements = [];\n    for (let key in this.state.authForm) {\n      formArrayElements.push({id: key, config: this.state.authForm[key]});\n    }\n    let form = formArrayElements.map(formElement => <Input \n        key={formElement.id}\n        elementtype={formElement.config.elementtype}\n        elementconfig={formElement.config.elementconfig}\n        value={formElement.config.value}\n        isvalid={formElement.config.valid} \n        shouldvalidate={formElement.config.validation}\n        touched = {formElement.config.touched}\n        changed={event => this.onInputChangedHandler(event, formElement.id)}/>);\n        if(this.props.loading) {\n            form = <Spinner/>\n        }\n        let errorMessage = null;\n        if(this.props.error) {\n        errorMessage = (<p>{this.props.error.message}</p>)\n\n        }\n        let routeAway = null;\n        if(this.props.isAuthenticated) {\n          \n          routeAway = <Redirect to={this.props.authRedirectPath} />\n        }\n    return (\n      <div className={styles.Auth}>\n        {routeAway}\n          {errorMessage}\n        <form onSubmit={this.onsubmitHandler}>\n            {form}\n            <Button type=\"Success\">SUBMIT</Button>\n     </form>\n      <Button type=\"Danger\" clicked={this.switchMode}>SWITCH TO {this.state.isSignUp ? 'SIGN IN': 'SIGN UP'}</Button>\n       \n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n    return {\n        loading: state.auth.loading,\n        error: state.auth.error,\n        isAuthenticated: state.auth.token,\n        building: state.burgerBuilder.building,\n        authRedirectPath: state.auth.authRedirectPath\n    }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (email, password, isSignUp) => dispatch(Actions.auth(email, password, isSignUp)),\n        setReturnRoute: (path) => dispatch(Actions.setAuthRedirectPath(path))\n\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n","import React, { Component } from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport * as Actions from \"../../../store/actions/index\";\n\nclass Logout extends Component {\n    componentDidMount() {\n        // trigger logout action\n        this.props.onLogOut();\n\n    }\n    render() {\n        return (<Redirect to=\"/\" />)\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return{\n        onLogOut: () => dispatch(Actions.logOut)\n    }\n}\nexport default connect(null, mapDispatchToProps)(Logout)","import React, { Component } from 'react';\nimport Layout from \"./components/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\nimport Checkout from \"./containers/Checkout/Checkout\";\nimport Orders from \"./containers/Orders/Orders\";\nimport Auth from \"./containers/Auth/Auth\";\nimport Logout from \"./containers/Auth/Logout/Logout\";\n\n// always check state of Auth\nimport { connect } from \"react-redux\";\nimport * as Actions from \"./store/actions/index\";\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\n\nclass App extends Component{\n  componentDidMount () {\n    this.props.onTryAutoLogin();\n  }\n  render() {\n    let routes = (\n      <Switch>\n      <Route path=\"/auth\" component={Auth} />\n      <Route path=\"/\" exact component={BurgerBuilder} />\n      <Redirect to='/' />\n    </Switch>\n\n    );\n    if(this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n        <Route path=\"/checkout\" component={Checkout} />\n        <Route path=\"/orders\" component={Orders} />\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/logout\" component={Logout} />\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Redirect to=\"/\" />\n      </Switch>\n      );\n    }\n    return (\n      <div>\n        <Layout>\n        {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoLogin: () => dispatch(Actions.checkAuthState()),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App)); // connect on the main component drowns out the react router so we employ withRouter a higher order react component and wrap it around connect\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false,\n  building: false,\n};\n\nconst INGREDIENT_PRICES = {\n  salad: 0.4,\n  bacon: 0.7,\n  cheese: 0.3,\n  meat: 0.2,\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return {\n        ...state,\n        ingredients: {\n          ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\n          building: true,\n        },\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n      };\n    case actionTypes.REMOVE_INGREDIENT:\n      return {\n        ...state,\n        ingredients: {\n          ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1,\n          building: true,\n        },\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n      };\n    case actionTypes.SET_INGREDIENTS:\n      return {\n        ...state,\n        ingredients: action.ingredients,\n        error: false,\n        totalPrice: 4,\n        building: false,\n      };\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return {\n        ...state,\n        error: true,\n      };\n\n    default:\n      return state;\n  }\n};\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  orders: [],\n  loading: false,\n  purchased: false,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.CHECKOUT_INIT:\n      return {\n        ...state,\n        purchased: false,\n      };\n    case actionTypes.PURCHASE_BURGER_INIT:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      const newOrder = {\n        ...action.orderData,\n        id: action.id,\n      };\n      return {\n        ...state,\n        loading: false,\n        purchased: true,\n        order: state.order.concat(newOrder),\n      };\n    case actionTypes.PURCHASE_BURGER_FAIL:\n      return {\n        ...state,\n        loading: false,\n      };\n    case actionTypes.FETCH_ORDERS_START:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actionTypes.FETCH_ORDERS_SUCCESS: {\n      return {\n        ...state,\n        orders: action.orders,\n        loading: false,\n      };\n    }\n    case actionTypes.FETCH_ORDERS_FAIL: {\n      return {\n        ...state,\n        loading: false,\n      };\n    }\n    default:\n      return state;\n  }\n};\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\nconst initialState = {\n  token: null,\n  userId: null,\n  loading: false,\n  error: false,\n  authRedirectPath: \"/\",\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\n      return {\n        ...state,\n        authRedirectPath: action.path,\n      };\n    case actionTypes.AUTH_START:\n      return {\n        ...state,\n        loading: true,\n        error: false,\n      };\n    case actionTypes.AUTH_SUCCESS:\n      return {\n        ...state,\n        token: action.idToken,\n        userId: action.userId,\n        error: false,\n        loading: false,\n      };\n    case actionTypes.AUTH_FAIL:\n      return {\n        ...state,\n        token: null,\n        loading: false,\n        error: action.error,\n      };\n    case actionTypes.AUTH_LOGOUT:\n      return {\n        ...state,\n        token: null,\n        userId: null,\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\"; // import middleware to handle async calls\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilder\";\nimport orderReducer from \"./store/reducers/order\";\nimport authReducer from \"./store/reducers/auth\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n});\n\n// create store\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}